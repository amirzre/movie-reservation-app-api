[tool.poetry]
name = "movie-reservation-app-api"
version = "1.0.0"
description = "movie reservation app."
authors = ["Amir"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
pydantic-settings = "^2.6.1"
psycopg2 = "^2.9.10"
SQLAlchemy = "^2.0.36"
alembic = "^1.14.0"
redis = "^5.2.1"
PyJWT = "^2.10.1"
ujson = "^5.10.0"
fastapi = {extras = ["standard"], version = "^0.115.6"}
asyncpg = "^0.30.0"
bcrypt = "^4.2.1"
passlib = "^1.7.4"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.24.0"
factory-boy = "^3.3.1"
faker = "^33.1.0"
mypy = "^1.13.0"
ruff = "^0.8.2"
pre-commit = "^4.0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

package-mode = false

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "migrations",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4

# Assume Python 3.12
target-version = "py312"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = ["E722"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
case-sensitive = true
